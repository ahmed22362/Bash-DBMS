#!/bin/bash
shopt -s extglob

DB_PATH=~/dbs/$1
while true
do

	
	ls $DB_PATH
	read -p $'\n Select a table from the above : \n' tablename
	if [[ -f $DB_PATH/$tablename ]]
	then
		echo -e "Here are the available fileds/columns :\n`cat $DB_PATH/.$tablename.meta` "
		declare -i NumOfFields=$(wc -l < $DB_PATH/$tablename)
		read -p $'Do you want to navigate by \n[1]primary key \n[2]A specific field \n[3]Display entire table \n' option
		case $option in
			1)
				pk=$(awk -F: '$NF == "pk" { print $1; exit }' $DB_PATH/.$tablename.meta)
				pkindex=$(awk -F: '$NF == "pk" { print NR; exit }' $DB_PATH/.$tablename.meta)
				echo primary key is "$pk" at column number "$pkindex"
				read -p "please enter the desired primarykey to display entire row: " rowpk	
			        awk -F: -v idx="$pkindex" -v val="$rowpk" '$(idx) == val' $DB_PATH/$tablename	
	
				break
				;;
			2)
				declare -i field=0
				read -p $'Which column or filed you want to investigate? :chose the field number [1-9] ' field
				if [[ ! $field == [1-9] ]]
				then
					echo "you have exceeded the allowed number of columns...please try again"

				
				
				elif (( $field > $NumOfFields ))
				then 
					echo "you have exceeded the current number of columns for this table...please try again"
				else
					cut -d: -f$field $DB_PATH/$tablename
				fi
				
				break
				;;
			3)
				meta_file="$DB_PATH/.${tablename}.meta"
				data_file="$DB_PATH/${tablename}"

				# Extract headers from meta file
				headers=$(awk -F: '{printf "%s\t", $1} END {print ""}' "$meta_file")

				# Print formatted table
				{
				    echo -e "$headers"
				    awk -F: '{
					for (i = 1; i <= NF; i++) {
					    printf "%s%s", $i, (i < NF ? "\t" : "\n")
					}
				    }' "$data_file"
				} | column -t | awk '
				BEGIN {
				    print "+------------------------------------------------------+"
				}
				NR==1 {
				    print "| " $0 " |"
				    print "+------------------------------------------------------+"
				    next
				}
				{
				    print "| " $0 " |"
				}
				END {
				    print "+------------------------------------------------------+"
				}
				'

				break
				;;
			*)
				echo "Invalid option, please try again..."
				continue
				;;
		esac

	else
	read -p 'No table matching, would you like to try again or exit? : \n[1] Try again \n[any button] Exit ' option
	#case $option in
	#	1)
	#	continue
	#	;;
	#	*)
	#	echo "Going back to the previous menu..."
	#	break
	#	;;
      #	esac

			
	fi
	

done
