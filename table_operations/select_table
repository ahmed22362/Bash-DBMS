#!/bin/bash
shopt -s extglob
FILE_DIR="$(cd "$(dirname "$(realpath "${BASH_SOURCE[0]}")")" && pwd)"

DB_PATH=~/dbs/$1 # use dynamic variable for the db directory
while true
do

	
	echo "Here is the list of tables in database $DB_NAME, choose one to insert into or type 'exit' to quit:"
    for file in "$DB_DIR/$DB_NAME"/*.data
    do
    [[ -e "$file" ]] || continue
    echo "$(basename "${file%.data}")"
    done

	read -p $'\n Select a table from the above : \n' tablename
	
	if [[ -f $DB_PATH/"$tablename.data" ]]
	then
		echo -e "Here are the available fileds/columns :\n`cat -n $DB_PATH/.$tablename.meta` "
		declare -i NumOfFields=$(wc -l < $DB_PATH/".$tablename.meta" )
		read -p $'Do you want to navigate by \n[1]primary key \n[2]A specific field \n[3]Display entire table \n' option
		case $option in
			1)
				pk=$(awk -F: '$NF == "pk" { print $1; exit }' $DB_PATH/.$tablename.meta)
				pkindex=$(awk -F: '$NF == "pk" { print NR; exit }' $DB_PATH/.$tablename.meta)
				echo primary key is "$pk" at column number "$pkindex"
				read -p "please enter the desired primarykey to display entire row: " rowpk	
			        echo "+---------------------------------+"
				awk -F: -v idx="$pkindex" -v val="$rowpk" '$(idx) == val' $DB_PATH/"$tablename.data" | sed 's/{colon}/:/g'
				echo "+---------------------------------+"
	
				break
				;;
			2)
				declare -i field=0
				read -p $'Which column number you want to investigate? :  ' field
				
				if (( $field > $NumOfFields ))
				then 
					echo "The entered number is greater number of columns for this table...please try again"
				else
					
					awk -F: -v FIELD="$field" 'NR == FIELD {print $1} ' "$DB_PATH/.$tablename.meta"
					echo "+-------------------------------+"
					cut -d: -f$field $DB_PATH/$"$tablename.data" | sed 's/{colon}/:/g'
					echo "+-------------------------------+"
				fi
				
			
				
				break
				;;
			3)
				DISPLAY_TABLE | sed 's/{colon}/:/g'
				break
				;;
			*)
				echo "Invalid option, please try again..."
				continue
				;;
		esac

	else
	read -p 'No table matching, would you like to try again or exit? : 
	[1] Try again 
	[any button] Exit ' option
	case $option in
		1)
		continue
		;;
		*)
		echo "Going back to the previous menu..."
		break
		;;
      	esac

			
	fi
	

done
